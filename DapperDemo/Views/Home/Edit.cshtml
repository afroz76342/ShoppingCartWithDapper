@model DapperDemo.Models.ProductListingModel
@inject Microsoft.Extensions.Configuration.IConfiguration _configuration

<section class="mb-5">
    <div class="container">
        <div class="">


            <div class="col-lg-6 mx-auto mt-5">
                <div class="registration-form px-5 py-4 border rounded">
                    <div class="justify-content-between align-items-end">
                        <h3 class="mb-2 text-uppercase fw-bold"> Edit Product</h3>
                        <p class="mb-2 text-danger fw-normal"> <small><sup class="mb-4 text-secondary fw-normal">*</sup> indicates mandatory fields</small></p>
                    </div>
                    @using (Html.BeginForm("EditProduct", "Home", FormMethod.Post, new { @class = "row g-3 form-floating", @id = "form2" }))
                    {
                        if (TempData["Status"] != null)
                        {
                            <div class="alert-dismissible fade show @(Convert.ToBoolean(TempData["Status"])? "alert alert-success":"alert alert-danger")" role="alert" id="autoHideAlert">
                                @TempData["Message"]
                            </div>
                        }
                        @Html.HiddenFor(x => x.Id, new { @id = "IdHdn", Value=Model.Id })
                        <div class="col-md-12">
                            <div class="form-floating">
                                @Html.TextBoxFor(model => model.Name, new { @class = "form-control mw-100", @placeholder = "Name *" })
                                @Html.LabelFor(model => model.Name)
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger smallalert" })
                            </div>
                        </div>


                        <div class="col-md-12">
                            <div class="form-floating">
                                @Html.TextBoxFor(model => model.Price, new { @class = "form-control mw-100", @placeholder = "Price *" })
                                @Html.LabelFor(model => model.Price)
                                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger smallalert" })
                            </div>
                        </div>

                        <div class="col-md-12">
                            <div class="form-floating">
                                @Html.DropDownListFor(model => model.Currency, ViewBag.Currencies as List<SelectListItem>, "-- Select --", new { @class = "form-select mw-100", id = "CurrencyDropdown", @placeholder = "Currency **" })
                                @Html.LabelFor(model => model.Currency)
                                @Html.HiddenFor(x=>x.Currency, new { @id="CurrencyHdn"})
                                @Html.ValidationMessageFor(model => model.Currency, "", new { @class = "text-danger smallalert" })
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="form-floating">
                                <div class="g-recaptcha" data-sitekey="@_configuration.GetSection("GoogleCaptcha:SiteKey").Value" data-callback="enableSubmit" data-expired-callback="expiredReCaptcha"></div>
                                <script src='https://www.google.com/recaptcha/api.js' type="text/javascript"></script>
                                @Html.ValidationMessage("ReCaptcha", new { @class = "text-danger smallalert" })
                            </div>
                        </div>


                        <div class="col-12">
                            <button type="submit" class="btn btn-dark theme-btn" id="btnSubmit" disabled="disabled">Submit</button>
                        </div>
                    }
                </div>
            </div>

        </div>
    </div>
</section>


<script type="text/javascript">
    var enableSubmit = function () {
        document.getElementById("btnSubmit").disabled = false;
    };
    function expiredReCaptcha() {
        $('#btnSubmit').attr('disabled', 'disabled');
    }

    $(document).ready(function () {
       
        $("#CurrencyHdn").val($("#CurrencyDropdown option:selected").val());

        // Handle change event of CurrencyDropdown
        $("#CurrencyDropdown").change(function () {
            $("#CurrencyHdn").val($(this).val());
        });
    });

</script>